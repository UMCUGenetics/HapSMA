params {

    // HG38 settings. Some tools need unzipped ref. Need to be fixed
    genome = '/hpc/diaggen/projects/ONT_SMA_project/Nextflow/SMN2.fasta'
    genome_mapping_index = '/hpc/diaggen/projects/ONT_SMA_project/Nextflow/SMN2.mmi'

    longshotparams = '--min_alt_frac 0.10 --min_cov 6 --min_alt_count 3'

    guppy_basecaller_path = '/hpc/diaggen/software/tools/ont-guppy_6.1.2/bin/guppy_basecaller'
    guppy_path = '/hpc/diaggen/software/tools/ont-guppy_6.1.2/'
    guppy_basecaller_config = 'dna_r9.4.1_450bps_modbases_5mc_cg_sup.cfg'
    guppy_basecaller_params = ' -q 100000 --cpu_threads_per_caller 2 --gpu_runners_per_device 4 --compress_fastq -r'

    cluster_options = "--mail-user $params.email --mail-type FAIL --account=diaggen"
}

process {

    withLabel: ReBasecallingGuppy {
        cpus = 4
        memory = '32G'
        time = '24h'
        queue = 'gpu'
        clusterOptions = "$params.cluster_options --gres=tmpspace:32G --gpus-per-node=RTX6000 --ntasks=1"
        publishDir {
            path = "$params.outdir/Guppy/"
            mode = 'link'
        }
    }

    withLabel: FASTQC_0_11_8 {
        cpus = 2
        memory = '1G'
        time = '40m'
        clusterOptions = "$params.cluster_options --gres=tmpspace:10G"

        publishDir {
            path = "$params.outdir/QC/FastQC"
            mode = 'link'
        }
    }

    withLabel: Sambamba_0_7_0_ViewSort {
        cpus = 10
        memory = '16G'
        time = '20m'
        clusterOptions = "$params.cluster_options --gres=tmpspace:20G"
    }

    withLabel: Sambamba_0_7_0_Merge {
        cpus = 10
        memory = '16G'
        time = '20m'
        clusterOptions = "$params.cluster_options --gres=tmpspace:20G"
        publishDir {
            path = "$params.outdir/bam_files"
            mode = 'link'
        }
    }
   
    withLabel: Sambamba_0_7_0_Split {
        cpus = 10
        memory = '16G'
        time = '20m'
        clusterOptions = "$params.cluster_options --gres=tmpspace:20G"
        publishDir {
            path = "$params.outdir/bam_files"
            mode = 'link'
        }
    }

    withLabel: Sambamba_0_7_0Filter {
        cpus = 10
        memory = '16G'
        time = '20m'
        clusterOptions = "$params.cluster_options --gres=tmpspace:20G"
    }

    withLabel: SaveInputFile {
        memory = '2G'
        time = '2m'
        publishDir {
            path = "$params.outdir/"
            mode = 'copy'
        }
    }
     
    withLabel: VersionLog {
        cpus = 2
        memory = '5G'
        time = '1h'

        publishDir {
            path = "$params.outdir/log"
            mode = 'link'
        }
    }

    withLabel: Workflow_Export_Params {
        cpus = 2
        memory = '5G'
        time = '10m'

        publishDir {
            path = "$params.outdir/log"
            mode = 'link'
        }
    }
}

report {
    enabled = true
    file = "$params.outdir/log/nextflow_report.html"
}

trace {
    enabled = true
    file = "$params.outdir/log/nextflow_trace.txt"
    fields = 'task_id,hash,native_id,process,tag,name,status,exit,module,container,cpus,time,disk,memory,attempt,submit,start,complete,duration,realtime,queue,%cpu,%mem,rss,vmem,peak_rss,peak_vmem,rchar,wchar,syscr,syscw,read_bytes,write_bytes,vol_ctxt,inv_ctxt'
}

timeline {
    enabled = true
    file = "$params.outdir/log/nextflow_timeline.html"
}

profiles {

    slurm {
        process {
            executor = 'slurm'
            queue = 'cpu'
            clusterOptions = "$params.cluster_options"

            errorStrategy = 'retry'
            maxRetries = 3
        }

        singularity {
            enabled = true
            runOptions = '-B /hpc:/hpc -B $TMPDIR:$TMPDIR'
            autoMounts = true
            cacheDir = '/hpc/diaggen/software/singularity_cache'
        }

        executor {
            queueSize = 1000
            pollInterval = '1min'
            queueStatInterval = '5min'
            submitRatelimit = '10sec'
        }

       mail {
            smtp.host = 'localhost'
        }
    }

    mac {
        docker.enabled = true
        docker.runOptions = '-v /Users:/Users'
    }
}
