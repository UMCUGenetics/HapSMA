params {

    // Settings for locally installed datafiles and tools
    // Reference genome specific parameters and datafiles
    genome_fasta = "{path_to_file}"
    genome_mapping_index = "{path_to_file}"
    calling_target_bed = "{path_to_file}"
    calling_target_region = "{chr:start-stop}"
    homopolymer_bed = "{path_to_file}"
    phaseset_region = "{chr:start-stop}"

    // Path to local install of Guppy and Guppy params
    guppy_basecaller_path = "{path_to_guppy_binairyfile}"
    guppy_basecaller_config = "{path_to_basecalling_model.cfg}"
    guppy_basecaller_params = " -q 100000 --chunks_per_runner 750 --compress_fastq -r"

    // Location of clair3 model within image specifically within v1.0.4--py39hf5e1c6e_3
    clair3model = "/usr/local/bin/models/r941_prom_sup_g5014"

    // General settings
    // Conditions used in Sambamba filtering of BAM
    conditions = "sequence_length >= 1000"

    // Homopolymer filtering 
    bed_colums = "CHROM,FROM,TO,RegionRef"
    info_field_homopolymer_bed = "##INFO=<ID=RegionRef,Number=1,Type=String,Description=\"Variant is within specific region in reference genome\">"

    //VCF annotation of SNV and INDELs called with GATK or Clair3
    gatk_snp_filter = "--filter-name SNP_LowQualityDepth --filter-expression 'QD < 2.0' --filter-name SNP_MappingQuality --filter-expression 'MQ < 40.0' --filter-name SNP_StrandBias --filter-expression 'FS > 10.0' --filter-name Ref_Homopolymer --filter-expression 'RegionRef > 0'"
    gatk_snp_cluster = "--cluster-size 3 --cluster-window-size 35"
    gatk_indel_filter = "--filter-name INDEL_LowQualityDepth --filter-expression 'QD < 2.0' --filter-name INDEL_StrandBias --filter-expression 'FS > 200.0' --filter-name --filter-name --filter-expression 'ReadPosRankSum < -20.0'"
    clair3_snp_cluster = "--cluster-size 3 --cluster-window-size 35"
    clair3_snp_filter = "--filter-name Ref_Homopolymer --filter-expression 'RegionRef > 0'"
    clair3_indel_filter = "--filter-name Ref_Homopolymer --filter-expression 'RegionRef > 0'"

    // Region of interest for BAM > fastq is default empty. Parameter here enables possibility to select specific region (i.e. SMA locus). roi = chr:start-stop (e.g chr5:71274893-71447410)
    roi_fastq = ""
}

process {

    withLabel: ReBasecallingGuppy {
        cpus = 2
        memory = { 20.GB * task.attempt }
        time = { (3.m * fast5) * task.attempt }

        publishDir {
            path = "$params.outdir/Guppy/"
            mode = 'link'
        }
    }

    withLabel: bcftools_1_15_1 {
        cpus = 2
        memory = { 4.GB * task.attempt }
        time = { 10.m * task.attempt }

    }

    withLabel: Clair3_1_0_4 {
        cpus = 4
        memory = { 10.GB * task.attempt }
        time = { 20.m * task.attempt }
    }

    withLabel: Duplex_Tools {
        cpus = 2
        memory = { 10.GB * task.attempt }
        time = { 20.m * task.attempt }
    }

    withLabel: FASTQC_0_11_8 {
        cpus = 2
        memory = { 1.GB * task.attempt }
        time = { 40.m * task.attempt }

        publishDir {
            path = "$params.outdir/QC/FastQC"
            mode = 'link'
        }
    }

    withLabel: GATK_4_2_1_0_HaplotypeCaller_SMN {
        cpus = 2
        memory = { 10.GB * task.attempt }
        time = { 20.m * task.attempt }
    }

    withName: GATK_HaplotypeCaller_Region {
        cpus = 2
        memory = { 10.GB * task.attempt }
        time = { 60.m * (task.attempt + 1)}
        publishDir = [
            [path: "$params.outdir/vcf", mode: 'link', pattern: '*.vcf.gz'],
            [path: "$params.outdir/vcf", mode: 'link', pattern: '*.tbi'],
            [path: "$params.outdir/vcf", mode: 'link', pattern: '*.vcf'],
            [path: "$params.outdir/vcf", mode: 'link', pattern: '*.idx']
        ]
    }

    withLabel: GATK_4_2_1_0_FilterVcfs {
        cpus = 2
        memory = { 10.GB * task.attempt }
        time = { 40.m * task.attempt }
    }

    withLabel: GATK_4_2_1_0_VariantFiltrationSnpIndel{
        cpus = 2
        memory = { 10.GB * task.attempt }
        time = { 20.m * task.attempt }
        publishDir = [
            [path: "$params.outdir/vcf", mode: 'link', pattern: '*.vcf.gz'],
            [path: "$params.outdir/vcf", mode: 'link', pattern: '*.tbi'],
            [path: "$params.outdir/vcf", mode: 'link', pattern: '*.vcf'],
            [path: "$params.outdir/vcf", mode: 'link', pattern: '*.idx']
        ]
    }

    withName: GATK_VariantFiltration_Clair3_Bed{
        cpus = 2
        memory = { 10.GB * task.attempt }
        time = { 20.m * task.attempt }
        publishDir = [
            [path: "$params.outdir/clair3", mode: 'link', pattern: '*.vcf.gz'],
            [path: "$params.outdir/clair3", mode: 'link', pattern: '*.tbi'],
            [path: "$params.outdir/clair3", mode: 'link', pattern: '*.vcf'],
            [path: "$params.outdir/clair3", mode: 'link', pattern: '*.idx']
        ]
    }

    withName: GATK_VariantFiltration_Clair3_Region{
        cpus = 2
        memory = { 10.GB * task.attempt }
        time = { 20.m * task.attempt }
        publishDir = [
            [path: "$params.outdir/clair3", mode: 'link', pattern: '*.vcf.gz'],
            [path: "$params.outdir/clair3", mode: 'link', pattern: '*.tbi'],
            [path: "$params.outdir/clair3", mode: 'link', pattern: '*.vcf'],
            [path: "$params.outdir/clair3", mode: 'link', pattern: '*.idx']
        ]
    }

    withLabel: GetPhaseSet {
        cpus = 2
        memory = { 4.GB * task.attempt }
        time = { 5.m * task.attempt }
    }

    withLabel: Minimap_2_26 {
        cpus = 10
        memory = { 20.GB * task.attempt }
        time = { 90.m * task.attempt }
    }

    withLabel: Sambamba_1_0_0_ViewSort {
        cpus = 10
        memory = { 16.GB * task.attempt }
        time = { 40.m * task.attempt }
    }

    withLabel: Sambamba_1_0_0_Filter_Condition {
        cpus = 10
        memory = { 16.GB * task.attempt }
        time = { 30.m * task.attempt }
    }

    withLabel: Sambamba_1_0_0_Filter_Haplotype {
        cpus = 10
        memory = { 16.GB * task.attempt }
        time = { 30.m * task.attempt }
        publishDir {
            path = "$params.outdir/bam_files_haplotagged_split"
            mode = 'link'
        }
    }

    withLabel: Sambamba_1_0_0_Index {
        cpus = 2
        memory = { 16.GB * task.attempt }
        time = { 20.m * task.attempt }
    }

    withName: Sambamba_Index_ReadGroup {
        publishDir {
            path = "$params.outdir/bam_files"
            mode = 'link'
            pattern = '*.bai'
        }
    }

    withName: Sambamba_Index_Target_Region {
        publishDir {
            path = "$params.outdir/bam_files_haplotagged"
            mode = 'link'
            pattern = '*.bai'
        }
    }

    withName: Sambamba_Index_Target_Bed {
        publishDir {
            path = "$params.outdir/bam_files_haplotagged"
            mode = 'link'
            pattern = '*.bai'
        }
    }

    withLabel: Samtools_1_15_AddReplaceReadgroup {
        cpus = 2
        memory = { 16.GB * task.attempt }
        time = { 60.m * task.attempt }
        publishDir {
            path = "$params.outdir/bam_files"
            mode = 'link'
            pattern = '*.bam'
        }
    }

    withLabel: Samtools_1_15_Fastq {
        cpus = 2
        memory = { 16.GB * task.attempt }
        time = { 60.m * task.attempt }
    }

    withLabel: Samtools_1_15_Merge {
        cpus = 10
        memory = { 48.GB * task.attempt }
        time = { 2.h * task.attempt }
    }

    withLabel: Sniffles2_2_2 {
        cpus = 4
        memory = { 20.GB * task.attempt }
        time = { 20.m * task.attempt }
        publishDir {
            path = "$params.outdir/sniffles2"
            mode = 'link'
        }

    }

    withLabel: PICARD_2_26_4_CollectMultipleMetrics {
        cpus = 2
        memory = { 8.GB * task.attempt }
        time = { 2.h * task.attempt }
        publishDir {
            path = "$params.outdir/QC/Picard"
            mode = 'link'
        }
    }

    withLabel: PICARD_2_26_4_CollectWgsMetrics {
        cpus = 2
        memory = { 8.GB * task.attempt }
        time = { 4.h * task.attempt }
        publishDir {
            path = "$params.outdir/QC/Picard"
            mode = 'link'
        }
    }

    withLabel: PICARD_2_26_4_FilterSamReads {
        cpus = 2
        memory = { 8.GB * task.attempt }
        time = { 4.h * task.attempt }
    }

    withLabel: MultiQC_1_10 {
        cpus = 2
        memory = { 1.GB * task.attempt }
        time = { 5.m * task.attempt }
        publishDir {
            path = "$params.outdir/QC"
            mode = 'link'
        }
    }

    withLabel: SaveInputFile {
        memory = '2G'
        time = '2m'
        publishDir {
            path = "$params.outdir/"
            mode = 'link'
        }
    }

    withLabel: VersionLog {
        cpus = 2
        memory = '5G'
        time = '1h'

        publishDir {
            path = "$params.outdir/log"
            mode = 'link'
        }
    }

    withLabel: Whatshap_1_7_Phase {
        cpus = 2
        memory = { 16.GB * task.attempt }
        time = { 30.m * task.attempt }
    }

    withLabel: Whatshap_1_7_Haplotag {
        cpus = 2
        memory = { 16.GB * task.attempt }
        time = { 30.m * task.attempt }
        publishDir {
            path = "$params.outdir/bam_files_haplotagged"
            mode = 'link'
            pattern = '*tagged*.bam'
        }
    }

    withLabel: Workflow_Export_Params {
        cpus = 2
        memory = '5G'
        time = '10m'

        publishDir {
            path = "$params.outdir/log"
            mode = 'link'
        }
    }

    withLabel: Tabix_1_11_Zip_Index {
        cpus = 2
        memory = { 8.GB * task.attempt }
        time = { 10.m * task.attempt }
    }
}

report {
    enabled = true
    overwrite = true
    file = "$params.outdir/log/nextflow_report.html"
}

trace {
    enabled = true
    overwrite = true
    file = "$params.outdir/log/nextflow_trace.txt"
    fields = 'task_id,hash,native_id,process,tag,name,status,exit,module,container,cpus,time,disk,memory,attempt,submit,start,complete,duration,realtime,queue,%cpu,%mem,rss,vmem,peak_rss,peak_vmem,rchar,wchar,syscr,syscw,read_bytes,write_bytes,vol_ctxt,inv_ctxt'
}

timeline {
    enabled = true
    overwrite = true
    file = "$params.outdir/log/nextflow_timeline.html"
}
